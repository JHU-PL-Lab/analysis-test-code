zero = 0;
one = 1;
five = 5;
empty = {};
t = true;
list_maker_p = fun lm_self ->
               (x0 = fun list_elm ->
                     (x1 = fun rep_n ->
                           (x2 = rep_n == zero;
                            x3 = x2~true?
                            fun iszero -> (x4 = {empty = zero};)
                            :
                            fun notzero ->
                            (x5 = lm_self lm_self;
                             x6 = x5 list_elm;
                             x7 = rep_n - one;
                             x8 = x6 x7;
                             x9 = {head = list_elm, tail = x8};
                            )
                           )
                     )
               )
;
list_maker = list_maker_p list_maker_p;
pre_bool_lst = list_maker t;
bool_lst = pre_bool_lst five;
flip_fun = fun old_bool -> (x10 = not old_bool;);
bool_to_int =
  fun cur_bool ->
    (x11 = cur_bool ~ true ?
     fun is_true -> (x12 = one;):
     fun is_false -> (x13 = zero;)
);
list_map_p = fun self2 ->
             (x14 = fun map_fun ->
                    (x15 = fun list_to_map ->
                           (x16 = list_to_map.tail;
                            x17 = x16~{empty = any}?
                            fun isempty ->
                            (x18 = list_to_map.head;
                             x19 = map_fun x18;
                             tailexpr = {empty = empty};
                             x20 = {head = x19, tail = tailexpr};
                            )
                            :
                            fun notempty ->
                            (x21 = list_to_map.head;
                             x22 = map_fun x21;
                             x23 = self2 self2;
                             x24 = x23 map_fun;
                             x25 = list_to_map.tail;
                             x26 = x24 x25;
                             x27 = {head = x22, tail = x26};
                            )
                           )
                    )
             )
;

# A dynamic list access function
list_access_p = fun self3 ->
              (x28 = fun list_to_search ->
                     (x29 = fun index ->
                            (x30 = index == zero;
                             x31 = x30~true?
                             fun iszero2 ->
                                 (x32 = list_to_search.head;)
                             :
                             fun notzero2 ->
                                 (x33 = index - one;
                                  x34 = self3 self3;
                                  x35 = list_to_search.tail;
                                  x36 = x34 x35;
                                  x37 = x36 x33;
                                 )
                            )
                     )
              )
;

list_map = list_map_p list_map_p;
pre_map_1 = list_map flip_fun;
map_1 = pre_map_1 bool_lst;
pre_map_2 = list_map bool_to_int;
map_2 = pre_map_2 bool_lst;

list_access_1 = list_access_p list_access_p;
list_access_2 = list_access_1 map_1; 
res_1_hd = list_access_2 one;
